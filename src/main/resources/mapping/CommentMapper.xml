<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.noahcode.blog.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="cn.noahcode.blog.model.entity.Comment">
        <!--@mbg.generated-->
        <!--@Table comments-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="ip_address" jdbcType="VARCHAR" property="ipAddress"/>
        <result column="author_url" jdbcType="VARCHAR" property="authorUrl"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="user_agent" jdbcType="VARCHAR" property="userAgent"/>
        <result column="is_admin" jdbcType="BIT" property="isAdmin"/>
        <result column="allow_notification" jdbcType="BIT" property="allowNotification"/>
        <result column="top_priority" jdbcType="BIT" property="topPriority"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="post_id" jdbcType="BIGINT" property="postId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `type`, author, email, ip_address, author_url, content, `status`, user_agent,
        is_admin, allow_notification, top_priority, parent_id, post_id, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from comments
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from comments
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.noahcode.blog.model.entity.Comment"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into comments (`type`, author, email,
                              ip_address, author_url, content,
                              `status`, user_agent, is_admin,
                              allow_notification, top_priority, parent_id,
                              post_id, create_time, update_time)
        values (#{type,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
                #{ipAddress,jdbcType=VARCHAR}, #{authorUrl,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
                #{status,jdbcType=INTEGER}, #{userAgent,jdbcType=VARCHAR}, #{isAdmin,jdbcType=BIT},
                #{allowNotification,jdbcType=BIT}, #{topPriority,jdbcType=BIT}, #{parentId,jdbcType=BIGINT},
                #{postId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.noahcode.blog.model.entity.Comment"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into comments
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="type != null">
                `type`,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="ipAddress != null">
                ip_address,
            </if>
            <if test="authorUrl != null">
                author_url,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="userAgent != null">
                user_agent,
            </if>
            <if test="isAdmin != null">
                is_admin,
            </if>
            <if test="allowNotification != null">
                allow_notification,
            </if>
            <if test="topPriority != null">
                top_priority,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="postId != null">
                post_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null">
                #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="authorUrl != null">
                #{authorUrl,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="userAgent != null">
                #{userAgent,jdbcType=VARCHAR},
            </if>
            <if test="isAdmin != null">
                #{isAdmin,jdbcType=BIT},
            </if>
            <if test="allowNotification != null">
                #{allowNotification,jdbcType=BIT},
            </if>
            <if test="topPriority != null">
                #{topPriority,jdbcType=BIT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="postId != null">
                #{postId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.noahcode.blog.model.entity.Comment">
        <!--@mbg.generated-->
        update comments
        <set>
            <if test="type != null">
                `type` = #{type,jdbcType=INTEGER},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null">
                ip_address = #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="authorUrl != null">
                author_url = #{authorUrl,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="userAgent != null">
                user_agent = #{userAgent,jdbcType=VARCHAR},
            </if>
            <if test="isAdmin != null">
                is_admin = #{isAdmin,jdbcType=BIT},
            </if>
            <if test="allowNotification != null">
                allow_notification = #{allowNotification,jdbcType=BIT},
            </if>
            <if test="topPriority != null">
                top_priority = #{topPriority,jdbcType=BIT},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="postId != null">
                post_id = #{postId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.noahcode.blog.model.entity.Comment">
        <!--@mbg.generated-->
        update comments
        set `type`             = #{type,jdbcType=INTEGER},
            author             = #{author,jdbcType=VARCHAR},
            email              = #{email,jdbcType=VARCHAR},
            ip_address         = #{ipAddress,jdbcType=VARCHAR},
            author_url         = #{authorUrl,jdbcType=VARCHAR},
            content            = #{content,jdbcType=VARCHAR},
            `status`           = #{status,jdbcType=INTEGER},
            user_agent         = #{userAgent,jdbcType=VARCHAR},
            is_admin           = #{isAdmin,jdbcType=BIT},
            allow_notification = #{allowNotification,jdbcType=BIT},
            top_priority       = #{topPriority,jdbcType=BIT},
            parent_id          = #{parentId,jdbcType=BIGINT},
            post_id            = #{postId,jdbcType=BIGINT},
            create_time        = #{createTime,jdbcType=TIMESTAMP},
            update_time        = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="listBlogComments" resultMap="BaseResultMap">
        select *
        from comments
        where type = 0
    </select>

    <select id="listPageComments" resultMap="BaseResultMap">
        select *
        from comments
        where type = 1
    </select>

    <update id="toAdopt">
        update comments
        set `status` = 0
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="toRecycle">
        update comments
        set `status` = 2
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="toReduction">
        update comments
        set `status` = 0
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="commentCount" resultType="int">
        select count(1)
        from comments
    </select>

    <select id="listNewBlogComment" resultMap="BaseResultMap">
        select *
        from comments
        where type = 0
        order by create_time desc
        limit 5
    </select>

    <select id="listNewPageComment" resultMap="BaseResultMap">
        select *
        from comments
        where type = 1
        order by create_time desc
        limit 5
    </select>

    <select id="selectByPostIdCount" resultType="java.lang.Long">
        select count(1)
        from comments
        where type = 0
          and status = 0
          and post_id = #{postId,jdbcType=BIGINT}
    </select>

    <select id="selectBlogCommentsByPostId" resultMap="BaseResultMap">
        select *
        from comments
        where post_id = #{postId,jdbcType=BIGINT}
          and type = 0
          and status = 0
        order by create_time
    </select>

    <select id="selectPageCommentsByPostId" resultMap="BaseResultMap">
        select *
        from comments
        where post_id = #{postId,jdbcType=BIGINT}
          and type = 1
          and status = 0
        order by create_time
    </select>

    <select id="listQueryBlogComments" resultMap="BaseResultMap">
        select *
        from comments
                where type = 0
                  and
        <if test="status != null">
            status = #{status}
                    and
        </if>
        <if test="keyword != null">
            comments.content like '%${keyword}%'
        </if>
        order by create_time desc
    </select>

    <select id="listQueryPageComments" resultMap="BaseResultMap">
        select *
        from comments
        where type = 1
        and
        <if test="status != null">
            status = #{status}
            and
        </if>
        <if test="keyword != null">
            comments.content like '%${keyword}%'
        </if>
        order by create_time desc
    </select>

    <delete id="deleteByPostId">
        delete from comments
        where post_id = #{id,jdbcType=BIGINT}
    </delete>
</mapper>